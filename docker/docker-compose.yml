version: "2.1"
services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx
    volumes:
      - ./nginx-start/:/opt/nginx/
      - ./nginx/:/etc/nginx/
      - ../docs/_build/html/:/usr/share/nginx/html/docs/
    restart: always
    networks:
      - nginx-load-balancer
      - alt
  backend:
    build:
      context: ..
      dockerfile: Dockerfile-backend
    volumes:
      - ../:/opt/alt
    restart: always
    networks:
      - alt
    command: /opt/alt/bin/backend.sh
  frontend:
    build:
      context: ../ocd_frontend
      dockerfile: Dockerfile-frontend
    volumes:
      - ../ocd_frontend:/opt/alt/ocd_frontend
    restart: always
    networks:
      - alt
  redis:
    image: "redis:${REDIS_VERSION}"
    command: redis-server --appendonly no --save ''
    sysctls:
      - net.core.somaxconn=65535
    restart: always
    networks:
      - alt
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}"
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m  -Dlog4j2.formatMsgNoLookups=true"
      - xpack.monitoring.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata:/usr/share/elasticsearch/data
    restart: always
    networks:
      - alt
  app:
    build:
      context: ../app
      dockerfile: Dockerfile-app
    volumes:
      - ../app:/opt/app
    restart: always
    networks:
      - alt
  node:
    image: node:12.9.1
    working_dir: /opt/app/static
    networks:
      - alt
    volumes:
      - ../app/frontend:/opt/app
    restart: always
    # Use this to keep the container running
    tty: true
volumes:
  esdata:
    driver: local
networks:
  alt:
  nginx-load-balancer:
    external:
      name: docker_nginx-load-balancer
